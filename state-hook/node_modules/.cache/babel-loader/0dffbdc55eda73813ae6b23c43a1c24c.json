{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dusrb\\\\Desktop\\\\React\\\\state-hook\\\\src\\\\components\\\\CounterTwo.js\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  firstCounter: 0,\n  secondCounter: 10\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state,\n        firstCounter: state.firstCounter + action.value\n      };\n\n    case 'decrement':\n      const prevCounter = state.firstCounter;\n      const cal = action.value;\n\n      if (prevCounter - cal < 0) {\n        return { ...state,\n          firstCounter: 0\n        };\n      } else {\n        return { ...state,\n          firstCounter: state.firstCounter - action.value\n        };\n      }\n\n    case 'increment2':\n      return { ...state,\n        secondCounter: state.secondCounter + action.value\n      };\n\n    case 'decrement2':\n      return { ...state,\n        secondCounter: state.secondCounter - action.value\n      };\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction CounterTwo() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"First Count - \", count.firstCounter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Second Count - \", count.secondCounter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment2',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement2',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment',\n      value: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Increment 5\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement',\n      value: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Decrement 5\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Reset\"));\n}\n\nexport default CounterTwo;","map":{"version":3,"sources":["C:/Users/dusrb/Desktop/React/state-hook/src/components/CounterTwo.js"],"names":["React","useReducer","initialState","firstCounter","secondCounter","reducer","state","action","type","value","prevCounter","cal","CounterTwo","count","dispatch"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\r\n\r\nconst initialState = {\r\n    firstCounter: 0,\r\n    secondCounter: 10\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'increment':\r\n            return { ...state, firstCounter: state.firstCounter+action.value}\r\n        case 'decrement':\r\n            const prevCounter = state.firstCounter\r\n            const cal = action.value\r\n\r\n            if (prevCounter - cal < 0)  {\r\n                return { ...state, firstCounter: 0}\r\n            } else {\r\n                return { ...state, firstCounter: state.firstCounter-action.value}\r\n            }\r\n\r\n\r\n        case 'increment2':\r\n            return { ...state, secondCounter: state.secondCounter+action.value}\r\n        case 'decrement2':\r\n            return { ...state, secondCounter: state.secondCounter-action.value}\r\n\r\n\r\n        case 'reset':\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nfunction CounterTwo() {\r\n\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n                             \r\n    return (\r\n        <div>\r\n            <div>First Count - {count.firstCounter}</div>\r\n            <div>Second Count - {count.secondCounter}</div>\r\n            <button onClick={() => dispatch({type: 'increment', value: 1})}>Increment</button>\r\n            <button onClick={() => dispatch({type: 'decrement', value: 1})}>Decrement</button>\r\n\r\n            <button onClick={() => dispatch({type: 'increment2', value: 1})}>Increment</button>\r\n            <button onClick={() => dispatch({type: 'decrement2', value: 1})}>Decrement</button>\r\n\r\n            <button onClick={() => dispatch({type: 'increment', value: 5})}>Increment 5</button>\r\n            <button onClick={() => dispatch({type: 'decrement', value: 5})}>Decrement 5</button>\r\n            <button onClick={() => dispatch({type: 'reset'})}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterTwo\r\n"]},"metadata":{},"sourceType":"module"}